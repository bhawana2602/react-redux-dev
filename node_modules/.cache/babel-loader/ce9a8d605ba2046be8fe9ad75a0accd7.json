{"ast":null,"code":"import _slicedToArray from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abhi/Desktop/my-app/src/Newcard.js\";\nimport React, { Component } from 'react'; //import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport Payment from 'payment';\n\nvar Newcard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Newcard, _Component);\n\n  function Newcard(props) {\n    var _this;\n\n    _classCallCheck(this, Newcard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Newcard).call(this, props));\n    _this.state = {\n      type: {\n        name: 'unknown',\n        maxLength: 16\n      }\n    };\n\n    _this.setCards();\n\n    return _this;\n  }\n\n  _createClass(Newcard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var number = this.props.number;\n      this.updateType(number);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          acceptedCards = _this$props.acceptedCards,\n          number = _this$props.number;\n      var nextAcceptedCards = nextProps.acceptedCards,\n          nextNumber = nextProps.number;\n\n      if (number !== nextNumber) {\n        this.updateType(nextNumber);\n      }\n\n      if (acceptedCards.toString() !== nextAcceptedCards.toString()) {\n        this.setCards(nextProps);\n      }\n    }\n  }, {\n    key: \"setCards\",\n    value: function setCards() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var acceptedCards = props.acceptedCards;\n      var newCardArray = [];\n\n      if (acceptedCards.length) {\n        Payment.getCardArray().forEach(function (d) {\n          if (acceptedCards.includes(d.type)) {\n            newCardArray.push(d);\n          }\n        });\n      } else {\n        newCardArray = newCardArray.concat(Payment.getCardArray());\n      }\n\n      Payment.setCardArray(newCardArray);\n    }\n  }, {\n    key: \"updateType\",\n    value: function updateType(number) {\n      var callback = this.props.callback;\n      var type = Payment.fns.cardType(number) || 'unknown';\n      var maxLength = 16;\n\n      if (type === 'amex') {\n        maxLength = 15;\n      } else if (type === 'dinersclub') {\n        maxLength = 14;\n      } else if (['hipercard', 'mastercard', 'visa'].includes(type)) {\n        maxLength = 19;\n      }\n\n      var typeState = {\n        issuer: type,\n        maxLength: maxLength\n      };\n      var isValid = Payment.fns.validateCardNumber(number);\n      this.setState({\n        type: typeState\n      });\n      /* istanbul ignore else */\n\n      if (typeof callback === 'function') {\n        callback(typeState, isValid);\n      }\n    } //   render() {\n    //     return (\n    //          <div>\n    //          <form className=\"credit-card\">\n    //             <div className=\"form-header\">\n    //               <h4 className=\"title\">Credit card detail</h4>\n    //             </div>\n    //             <div className=\"form-body\">\n    //               <input type=\"text\" className=\"card-number\" placeholder=\"Card Number\" />\n    //               <div className=\"date-field\">\n    //                 <div className=\"month\">\n    //                   <select name=\"Month\">\n    //                     <option value=\"january\">January</option>\n    //                     <option value=\"february\">February</option>\n    //                     <option value=\"march\">March</option>\n    //                     <option value=\"april\">April</option>\n    //                     <option value=\"may\">May</option>\n    //                     <option value=\"june\">June</option>\n    //                     <option value=\"july\">July</option>\n    //                     <option value=\"august\">August</option>\n    //                     <option value=\"september\">September</option>\n    //                     <option value=\"october\">October</option>\n    //                     <option value=\"november\">November</option>\n    //                     <option value=\"december\">December</option>\n    //                   </select>\n    //                 </div>\n    //                 <div className=\"year\">\n    //                   <select name=\"Year\">\n    //                     <option value=\"2016\">2016</option>\n    //                     <option value=\"2017\">2017</option>\n    //                     <option value=\"2018\">2018</option>\n    //                     <option value=\"2019\">2019</option>\n    //                     <option value=\"2020\">2020</option>\n    //                     <option value=\"2021\">2021</option>\n    //                     <option value=\"2022\">2022</option>\n    //                     <option value=\"2023\">2023</option>\n    //                     <option value=\"2024\">2024</option>\n    //                   </select>\n    //                 </div>\n    //  /              </div>\n    //               <div className=\"card-verification\">\n    //                 <div className=\"cvv-input\">\n    //                   <input type=\"text\" placeholder=\"CVV\" />\n    //                 </div>\n    //                 <div className=\"cvv-details\">\n    //                  <input type=\"text\" placeholder=\"Name this card for future use\" />\n    //                 </div>\n    //               </div>\n    //               <button type=\"submit\" className=\"proceed-btn\"><a href=\"#\">SAVE THIS CARD</a></button>\n    //               <input type=\"reset\" className=\"paypal-btn\" value=\"CANCEL\" name=\"Cancel\" />\n    //               <p className=\"note\">Your card details would be securely saved for faster payments.Your CVV will not be stored.</p>\n    //             </div>\n    //              </form>\n    //          </div>\n    //     );\n    //   }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          cvc = _this$props2.cvc,\n          focused = _this$props2.focused,\n          locale = _this$props2.locale,\n          name = _this$props2.name,\n          placeholders = _this$props2.placeholders;\n      var number = this.number,\n          expiry = this.expiry;\n      return React.createElement(\"div\", {\n        key: \"Cards\",\n        className: \"rccs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: ['rccs__card', \"rccs__card--\".concat(this.issuer), focused === 'cvc' && this.issuer !== 'amex' ? 'rccs__card--flipped' : ''].join(' ').trim(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rccs__card--front\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rccs__card__background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rccs__issuer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: ['rccs__cvc__front', focused === 'cvc' ? 'rccs--focused' : ''].join(' ').trim(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, cvc), React.createElement(\"div\", {\n        className: ['rccs__number', number.replace(/ /g, '').length > 16 ? 'rccs__number--large' : '', focused === 'number' ? 'rccs--focused' : '', number.substr(0, 1) !== '•' ? 'rccs--filled' : ''].join(' ').trim(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, number), React.createElement(\"div\", {\n        className: ['rccs__name', focused === 'name' ? 'rccs--focused' : '', name ? 'rccs--filled' : ''].join(' ').trim(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, name || placeholders.name), React.createElement(\"div\", {\n        className: ['rccs__expiry', focused === 'expiry' ? 'rccs--focused' : '', expiry.substr(0, 1) !== '•' ? 'rccs--filled' : ''].join(' ').trim(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rccs__expiry__valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, locale.valid), React.createElement(\"div\", {\n        className: \"rccs__expiry__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, expiry)), React.createElement(\"div\", {\n        className: \"rccs__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rccs__card--back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rccs__card__background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rccs__stripe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rccs__signature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: ['rccs__cvc', focused === 'cvc' ? 'rccs--focused' : ''].join(' ').trim(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, cvc), React.createElement(\"div\", {\n        className: \"rccs__issuer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"issuer\",\n    get: function get() {\n      var type = this.state.type;\n      var _this$props3 = this.props,\n          issuer = _this$props3.issuer,\n          preview = _this$props3.preview;\n      return preview && issuer ? issuer.toLowerCase() : type.issuer;\n    }\n  }, {\n    key: \"number\",\n    get: function get() {\n      var type = this.state.type;\n      var _this$props4 = this.props,\n          number = _this$props4.number,\n          preview = _this$props4.preview;\n      var maxLength = preview ? 19 : type.maxLength;\n      var nextNumber = typeof number === 'number' ? number.toString() : number.replace(\"/[A-Za-z]| /g\", '');\n\n      if (isNaN(parseInt(nextNumber, 10)) && !preview) {\n        nextNumber = '';\n      }\n\n      if (maxLength > 16) {\n        maxLength = nextNumber.length <= 16 ? 16 : maxLength;\n      }\n\n      if (nextNumber.length > maxLength) {\n        nextNumber = nextNumber.slice(0, maxLength);\n      }\n\n      while (nextNumber.length < maxLength) {\n        nextNumber += '•';\n      }\n\n      if (['amex', 'dinersclub'].includes(this.issuer)) {\n        var format = [0, 4, 10];\n        var limit = [4, 6, 5];\n        nextNumber = \"\".concat(nextNumber.substr(format[0], limit[0]), \" \").concat(nextNumber.substr(format[1], limit[1]), \" \").concat(nextNumber.substr(format[2], limit[2]));\n      } else if (nextNumber.length > 16) {\n        var _format = [0, 4, 8, 12];\n        var _limit = [4, 7];\n        nextNumber = \"\".concat(nextNumber.substr(_format[0], _limit[0]), \" \").concat(nextNumber.substr(_format[1], _limit[0]), \" \").concat(nextNumber.substr(_format[2], _limit[0]), \" \").concat(nextNumber.substr(_format[3], _limit[1]));\n      } else {\n        for (var i = 1; i < maxLength / 4; i++) {\n          var space_index = i * 4 + (i - 1);\n          nextNumber = \"\".concat(nextNumber.slice(0, space_index), \" \").concat(nextNumber.slice(space_index));\n        }\n      }\n\n      return nextNumber;\n    }\n  }, {\n    key: \"expiry\",\n    get: function get() {\n      var _this$props$expiry = this.props.expiry,\n          expiry = _this$props$expiry === void 0 ? '' : _this$props$expiry;\n      var date = typeof expiry === 'number' ? expiry.toString() : expiry;\n      var month = '';\n      var year = '';\n\n      if (date.includes('/')) {\n        var _date$split = date.split('/');\n\n        var _date$split2 = _slicedToArray(_date$split, 2);\n\n        month = _date$split2[0];\n        year = _date$split2[1];\n      } else if (date.length) {\n        month = date.substr(0, 2);\n        year = date.substr(2, 6);\n      }\n\n      while (month.length < 2) {\n        month += '•';\n      }\n\n      if (year.length > 2) {\n        year = year.substr(2, 4);\n      }\n\n      while (year.length < 2) {\n        year += '•';\n      }\n\n      return \"\".concat(month, \"/\").concat(year);\n    }\n  }]);\n\n  return Newcard;\n}(Component);\n\nNewcard.propTypes = {\n  acceptedCards: PropTypes.array,\n  callback: PropTypes.func,\n  cvc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  expiry: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  focused: PropTypes.string,\n  issuer: PropTypes.string,\n  locale: PropTypes.shape({\n    valid: PropTypes.string\n  }),\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  placeholders: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  preview: PropTypes.bool\n};\nNewcard.defaultProps = {\n  acceptedCards: [],\n  locale: {\n    valid: 'valid thru'\n  },\n  placeholders: {\n    name: 'YOUR NAME HERE'\n  },\n  preview: false\n};\nexport default Newcard;","map":{"version":3,"sources":["/home/abhi/Desktop/my-app/src/Newcard.js"],"names":["React","Component","PropTypes","Payment","Newcard","props","state","type","name","maxLength","setCards","number","updateType","nextProps","acceptedCards","nextAcceptedCards","nextNumber","toString","newCardArray","length","getCardArray","forEach","d","includes","push","concat","setCardArray","callback","fns","cardType","typeState","issuer","isValid","validateCardNumber","setState","cvc","focused","locale","placeholders","expiry","join","trim","replace","substr","valid","preview","toLowerCase","isNaN","parseInt","slice","format","limit","i","space_index","date","month","year","split","propTypes","array","func","oneOfType","string","isRequired","shape","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport Payment from 'payment';\n\nclass Newcard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: {\n        name: 'unknown',\n        maxLength: 16,\n      },\n    };\n\n    this.setCards();\n  }\n\n  static propTypes = {\n    acceptedCards: PropTypes.array,\n    callback: PropTypes.func,\n    cvc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    expiry: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    focused: PropTypes.string,\n    issuer: PropTypes.string,\n    locale: PropTypes.shape({\n      valid: PropTypes.string,\n    }),\n    name: PropTypes.string.isRequired,\n    number: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    placeholders: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n    preview: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    acceptedCards: [],\n    locale: {\n      valid: 'valid thru',\n    },\n    placeholders: {\n      name: 'YOUR NAME HERE',\n    },\n    preview: false,\n  };\n\n  componentDidMount() {\n    const { number } = this.props;\n\n    this.updateType(number);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { acceptedCards, number } = this.props;\n\n    const {\n      acceptedCards: nextAcceptedCards,\n      number: nextNumber,\n    } = nextProps;\n\n    if (number !== nextNumber) {\n      this.updateType(nextNumber);\n    }\n\n    if (acceptedCards.toString() !== nextAcceptedCards.toString()) {\n      this.setCards(nextProps);\n    }\n  }\n\n  get issuer() {\n    const { type } = this.state;\n    const { issuer, preview } = this.props;\n\n    return preview && issuer ? issuer.toLowerCase() : type.issuer;\n  }\n\n  get number() {\n    const { type } = this.state;\n    const { number, preview } = this.props;\n\n    let maxLength = preview ? 19 : type.maxLength;\n    let nextNumber = typeof number === 'number' ? number.toString() : number.replace(\"/[A-Za-z]| /g\", '');\n\n    if (isNaN(parseInt(nextNumber, 10)) && !preview) {\n      nextNumber = '';\n    }\n\n    if (maxLength > 16) {\n      maxLength = nextNumber.length <= 16 ? 16 : maxLength;\n    }\n\n    if (nextNumber.length > maxLength) {\n      nextNumber = nextNumber.slice(0, maxLength);\n    }\n\n    while (nextNumber.length < maxLength) {\n      nextNumber += '•';\n    }\n\n    if (['amex', 'dinersclub'].includes(this.issuer)) {\n      const format = [0, 4, 10];\n      const limit = [4, 6, 5];\n      nextNumber = `${nextNumber.substr(format[0], limit[0])} ${nextNumber.substr(format[1], limit[1])} ${nextNumber.substr(format[2], limit[2])}`;\n    }\n    else if (nextNumber.length > 16) {\n      const format = [0, 4, 8, 12];\n      const limit = [4, 7];\n      nextNumber = `${nextNumber.substr(format[0], limit[0])} ${nextNumber.substr(format[1], limit[0])} ${nextNumber.substr(format[2], limit[0])} ${nextNumber.substr(format[3], limit[1])}`;\n    }\n    else {\n      for (let i = 1; i < (maxLength / 4); i++) {\n        const space_index = (i * 4) + (i - 1);\n        nextNumber = `${nextNumber.slice(0, space_index)} ${nextNumber.slice(space_index)}`;\n      }\n    }\n\n    return nextNumber;\n  }\n\n  get expiry() {\n    const { expiry = '' } = this.props;\n    const date = typeof expiry === 'number' ? expiry.toString() : expiry;\n    let month = '';\n    let year = '';\n\n    if (date.includes('/')) {\n      [month, year] = date.split('/');\n    }\n    else if (date.length) {\n      month = date.substr(0, 2);\n      year = date.substr(2, 6);\n    }\n\n    while (month.length < 2) {\n      month += '•';\n    }\n\n    if (year.length > 2) {\n      year = year.substr(2, 4);\n    }\n\n    while (year.length < 2) {\n      year += '•';\n    }\n\n    return `${month}/${year}`;\n  }\n\n  setCards(props = this.props) {\n    const { acceptedCards } = props;\n    let newCardArray = [];\n\n    if (acceptedCards.length) {\n      Payment.getCardArray()\n        .forEach(d => {\n          if (acceptedCards.includes(d.type)) {\n            newCardArray.push(d);\n          }\n        });\n    }\n    else {\n      newCardArray = newCardArray.concat(Payment.getCardArray());\n    }\n\n    Payment.setCardArray(newCardArray);\n  }\n\n  updateType(number) {\n    const { callback } = this.props;\n    const type = Payment.fns.cardType(number) || 'unknown';\n\n    let maxLength = 16;\n\n    if (type === 'amex') {\n      maxLength = 15;\n    }\n    else if (type === 'dinersclub') {\n      maxLength = 14;\n    }\n    else if (['hipercard', 'mastercard', 'visa'].includes(type)) {\n      maxLength = 19;\n    }\n\n    const typeState = {\n      issuer: type,\n      maxLength,\n    };\n    const isValid = Payment.fns.validateCardNumber(number);\n\n    this.setState({\n      type: typeState,\n    });\n\n    /* istanbul ignore else */\n    if (typeof callback === 'function') {\n      callback(typeState, isValid);\n    }\n  }\n\n\n//   render() {\n//     return (\n//          <div>\n//          <form className=\"credit-card\">\n//             <div className=\"form-header\">\n//               <h4 className=\"title\">Credit card detail</h4>\n//             </div>\n           \n//             <div className=\"form-body\">\n//               <input type=\"text\" className=\"card-number\" placeholder=\"Card Number\" />\n           \n//               <div className=\"date-field\">\n//                 <div className=\"month\">\n//                   <select name=\"Month\">\n//                     <option value=\"january\">January</option>\n//                     <option value=\"february\">February</option>\n//                     <option value=\"march\">March</option>\n//                     <option value=\"april\">April</option>\n//                     <option value=\"may\">May</option>\n//                     <option value=\"june\">June</option>\n//                     <option value=\"july\">July</option>\n//                     <option value=\"august\">August</option>\n//                     <option value=\"september\">September</option>\n//                     <option value=\"october\">October</option>\n//                     <option value=\"november\">November</option>\n//                     <option value=\"december\">December</option>\n//                   </select>\n//                 </div>\n//                 <div className=\"year\">\n//                   <select name=\"Year\">\n//                     <option value=\"2016\">2016</option>\n//                     <option value=\"2017\">2017</option>\n//                     <option value=\"2018\">2018</option>\n//                     <option value=\"2019\">2019</option>\n//                     <option value=\"2020\">2020</option>\n//                     <option value=\"2021\">2021</option>\n//                     <option value=\"2022\">2022</option>\n//                     <option value=\"2023\">2023</option>\n//                     <option value=\"2024\">2024</option>\n//                   </select>\n//                 </div>\n//  /              </div>\n           \n//               <div className=\"card-verification\">\n//                 <div className=\"cvv-input\">\n//                   <input type=\"text\" placeholder=\"CVV\" />\n//                 </div>\n//                 <div className=\"cvv-details\">\n//                  <input type=\"text\" placeholder=\"Name this card for future use\" />\n//                 </div>\n//               </div>\n           \n//               <button type=\"submit\" className=\"proceed-btn\"><a href=\"#\">SAVE THIS CARD</a></button>\n//               <input type=\"reset\" className=\"paypal-btn\" value=\"CANCEL\" name=\"Cancel\" />\n//               <p className=\"note\">Your card details would be securely saved for faster payments.Your CVV will not be stored.</p>\n         \n//             </div>\n//              </form>\n//          </div>\n//     );\n//   }\n// }\n\nrender() {\n    const { cvc, focused, locale, name, placeholders } = this.props;\n    const { number, expiry } = this;\n\n    return (\n      <div key=\"Cards\" className=\"rccs\">\n        <div\n          className={[\n            'rccs__card',\n            `rccs__card--${this.issuer}`,\n            focused === 'cvc' && this.issuer !== 'amex' ? 'rccs__card--flipped' : '',\n          ].join(' ').trim()}\n        >\n          <div className=\"rccs__card--front\">\n            <div className=\"rccs__card__background\" />\n            <div className=\"rccs__issuer\" />\n            <div\n              className={[\n                'rccs__cvc__front',\n                focused === 'cvc' ? 'rccs--focused' : '',\n              ].join(' ').trim()}\n            >\n              {cvc}\n            </div>\n            <div\n              className={[\n                'rccs__number',\n                number.replace(/ /g, '').length > 16 ? 'rccs__number--large' : '',\n                focused === 'number' ? 'rccs--focused' : '',\n                number.substr(0, 1) !== '•' ? 'rccs--filled' : '',\n              ].join(' ').trim()}\n            >\n              {number}\n            </div>\n            <div\n              className={[\n                'rccs__name',\n                focused === 'name' ? 'rccs--focused' : '',\n                name ? 'rccs--filled' : '',\n              ].join(' ').trim()}\n            >\n              {name || placeholders.name}\n            </div>\n            <div\n              className={[\n                'rccs__expiry',\n                focused === 'expiry' ? 'rccs--focused' : '',\n                expiry.substr(0, 1) !== '•' ? 'rccs--filled' : '',\n              ].join(' ').trim()}\n            >\n              <div className=\"rccs__expiry__valid\">{locale.valid}</div>\n              <div className=\"rccs__expiry__value\">{expiry}</div>\n            </div>\n            <div className=\"rccs__chip\" />\n          </div>\n          <div className=\"rccs__card--back\">\n            <div className=\"rccs__card__background\" />\n            <div className=\"rccs__stripe\" />\n            <div className=\"rccs__signature\" />\n            <div\n              className={[\n                'rccs__cvc',\n                focused === 'cvc' ? 'rccs--focused' : '',\n              ].join(' ').trim()}\n            >\n              {cvc}\n            </div>\n            <div className=\"rccs__issuer\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Newcard;\n"]},"metadata":{},"sourceType":"module"}