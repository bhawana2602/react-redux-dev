{"ast":null,"code":"import _slicedToArray from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abhi/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abhi/Desktop/my-app/src/Newcard.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport Payment from 'payment';\n\nvar Newcard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Newcard, _Component);\n\n  function Newcard(props) {\n    var _this;\n\n    _classCallCheck(this, Newcard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Newcard).call(this, props));\n    _this.state = {\n      type: {\n        name: 'unknown',\n        maxLength: 16\n      }\n    };\n\n    _this.setCards();\n\n    return _this;\n  }\n\n  _createClass(Newcard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var number = this.props.number;\n      this.updateType(number);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          acceptedCards = _this$props.acceptedCards,\n          number = _this$props.number;\n      var nextAcceptedCards = nextProps.acceptedCards,\n          nextNumber = nextProps.number;\n\n      if (number !== nextNumber) {\n        this.updateType(nextNumber);\n      }\n\n      if (acceptedCards.toString() !== nextAcceptedCards.toString()) {\n        this.setCards(nextProps);\n      }\n    }\n  }, {\n    key: \"setCards\",\n    value: function setCards() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var acceptedCards = props.acceptedCards;\n      var newCardArray = [];\n\n      if (acceptedCards.length) {\n        Payment.getCardArray().forEach(function (d) {\n          if (acceptedCards.includes(d.type)) {\n            newCardArray.push(d);\n          }\n        });\n      } else {\n        newCardArray = newCardArray.concat(Payment.getCardArray());\n      }\n\n      Payment.setCardArray(newCardArray);\n    }\n  }, {\n    key: \"updateType\",\n    value: function updateType(number) {\n      var callback = this.props.callback;\n      var type = Payment.fns.cardType(number) || 'unknown';\n      var maxLength = 16;\n\n      if (type === 'amex') {\n        maxLength = 15;\n      } else if (type === 'dinersclub') {\n        maxLength = 14;\n      } else if (['hipercard', 'mastercard', 'visa'].includes(type)) {\n        maxLength = 19;\n      }\n\n      var typeState = {\n        issuer: type,\n        maxLength: maxLength\n      };\n      var isValid = Payment.fns.validateCardNumber(number);\n      this.setState({\n        type: typeState\n      });\n      /* istanbul ignore else */\n\n      if (typeof callback === 'function') {\n        callback(typeState, isValid);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"credit-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Credit card detail\")), React.createElement(\"div\", {\n        className: \"form-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"card-number\",\n        placeholder: \"Card Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"date-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"Month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"january\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"January\"), React.createElement(\"option\", {\n        value: \"february\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"February\"), React.createElement(\"option\", {\n        value: \"march\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"March\"), React.createElement(\"option\", {\n        value: \"april\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"April\"), React.createElement(\"option\", {\n        value: \"may\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"May\"), React.createElement(\"option\", {\n        value: \"june\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"June\"), React.createElement(\"option\", {\n        value: \"july\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"July\"), React.createElement(\"option\", {\n        value: \"august\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"August\"), React.createElement(\"option\", {\n        value: \"september\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"September\"), React.createElement(\"option\", {\n        value: \"october\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"October\"), React.createElement(\"option\", {\n        value: \"november\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"November\"), React.createElement(\"option\", {\n        value: \"december\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"December\"))), React.createElement(\"div\", {\n        className: \"year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"Year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"2016\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"2016\"), React.createElement(\"option\", {\n        value: \"2017\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"2017\"), React.createElement(\"option\", {\n        value: \"2018\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"2018\"), React.createElement(\"option\", {\n        value: \"2019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"2019\"), React.createElement(\"option\", {\n        value: \"2020\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"2020\"), React.createElement(\"option\", {\n        value: \"2021\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"2021\"), React.createElement(\"option\", {\n        value: \"2022\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"2022\"), React.createElement(\"option\", {\n        value: \"2023\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"2023\"), React.createElement(\"option\", {\n        value: \"2024\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"2024\"))), \"/              \"), React.createElement(\"div\", {\n        className: \"card-verification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cvv-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"CVV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cvv-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Name this card for future use\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"proceed-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"SAVE THIS CARD\")), React.createElement(\"input\", {\n        type: \"reset\",\n        className: \"paypal-btn\",\n        value: \"CANCEL\",\n        name: \"Cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Your card details would be securely saved for faster payments.Your CVV will not be stored.\"))));\n    }\n  }, {\n    key: \"issuer\",\n    get: function get() {\n      var type = this.state.type;\n      var _this$props2 = this.props,\n          issuer = _this$props2.issuer,\n          preview = _this$props2.preview;\n      return preview && issuer ? issuer.toLowerCase() : type.issuer;\n    }\n  }, {\n    key: \"number\",\n    get: function get() {\n      var type = this.state.type;\n      var _this$props3 = this.props,\n          number = _this$props3.number,\n          preview = _this$props3.preview;\n      var maxLength = preview ? 19 : type.maxLength;\n      var nextNumber = typeof number === 'number' ? number.toString() : number.replace(/[A-Za-z]| /g, '');\n\n      if (isNaN(parseInt(nextNumber, 10)) && !preview) {\n        nextNumber = '';\n      }\n\n      if (maxLength > 16) {\n        maxLength = nextNumber.length <= 16 ? 16 : maxLength;\n      }\n\n      if (nextNumber.length > maxLength) {\n        nextNumber = nextNumber.slice(0, maxLength);\n      }\n\n      while (nextNumber.length < maxLength) {\n        nextNumber += '•';\n      }\n\n      if (['amex', 'dinersclub'].includes(this.issuer)) {\n        var format = [0, 4, 10];\n        var limit = [4, 6, 5];\n        nextNumber = \"\".concat(nextNumber.substr(format[0], limit[0]), \" \").concat(nextNumber.substr(format[1], limit[1]), \" \").concat(nextNumber.substr(format[2], limit[2]));\n      } else if (nextNumber.length > 16) {\n        var _format = [0, 4, 8, 12];\n        var _limit = [4, 7];\n        nextNumber = \"\".concat(nextNumber.substr(_format[0], _limit[0]), \" \").concat(nextNumber.substr(_format[1], _limit[0]), \" \").concat(nextNumber.substr(_format[2], _limit[0]), \" \").concat(nextNumber.substr(_format[3], _limit[1]));\n      } else {\n        for (var i = 1; i < maxLength / 4; i++) {\n          var space_index = i * 4 + (i - 1);\n          nextNumber = \"\".concat(nextNumber.slice(0, space_index), \" \").concat(nextNumber.slice(space_index));\n        }\n      }\n\n      return nextNumber;\n    }\n  }, {\n    key: \"expiry\",\n    get: function get() {\n      var _this$props$expiry = this.props.expiry,\n          expiry = _this$props$expiry === void 0 ? '' : _this$props$expiry;\n      var date = typeof expiry === 'number' ? expiry.toString() : expiry;\n      var month = '';\n      var year = '';\n\n      if (date.includes('/')) {\n        var _date$split = date.split('/');\n\n        var _date$split2 = _slicedToArray(_date$split, 2);\n\n        month = _date$split2[0];\n        year = _date$split2[1];\n      } else if (date.length) {\n        month = date.substr(0, 2);\n        year = date.substr(2, 6);\n      }\n\n      while (month.length < 2) {\n        month += '•';\n      }\n\n      if (year.length > 2) {\n        year = year.substr(2, 4);\n      }\n\n      while (year.length < 2) {\n        year += '•';\n      }\n\n      return \"\".concat(month, \"/\").concat(year);\n    }\n  }]);\n\n  return Newcard;\n}(Component);\n\nNewcard.propTypes = {\n  acceptedCards: PropTypes.array,\n  callback: PropTypes.func,\n  cvc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  expiry: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  focused: PropTypes.string,\n  issuer: PropTypes.string,\n  locale: PropTypes.shape({\n    valid: PropTypes.string\n  }),\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  placeholders: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  preview: PropTypes.bool\n};\nNewcard.defaultProps = {\n  acceptedCards: [],\n  locale: {\n    valid: 'valid thru'\n  },\n  placeholders: {\n    name: 'YOUR NAME HERE'\n  },\n  preview: false\n};\nexport default Newcard;","map":{"version":3,"sources":["/home/abhi/Desktop/my-app/src/Newcard.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","PropTypes","Payment","Newcard","props","state","type","name","maxLength","setCards","number","updateType","nextProps","acceptedCards","nextAcceptedCards","nextNumber","toString","newCardArray","length","getCardArray","forEach","d","includes","push","concat","setCardArray","callback","fns","cardType","typeState","issuer","isValid","validateCardNumber","setState","preview","toLowerCase","replace","isNaN","parseInt","slice","format","limit","substr","i","space_index","expiry","date","month","year","split","propTypes","array","func","cvc","oneOfType","string","isRequired","focused","locale","shape","valid","placeholders","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport Payment from 'payment';\n\nclass Newcard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: {\n        name: 'unknown',\n        maxLength: 16,\n      },\n    };\n\n    this.setCards();\n  }\n\n  static propTypes = {\n    acceptedCards: PropTypes.array,\n    callback: PropTypes.func,\n    cvc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    expiry: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    focused: PropTypes.string,\n    issuer: PropTypes.string,\n    locale: PropTypes.shape({\n      valid: PropTypes.string,\n    }),\n    name: PropTypes.string.isRequired,\n    number: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    placeholders: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n    preview: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    acceptedCards: [],\n    locale: {\n      valid: 'valid thru',\n    },\n    placeholders: {\n      name: 'YOUR NAME HERE',\n    },\n    preview: false,\n  };\n\n  componentDidMount() {\n    const { number } = this.props;\n\n    this.updateType(number);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { acceptedCards, number } = this.props;\n\n    const {\n      acceptedCards: nextAcceptedCards,\n      number: nextNumber,\n    } = nextProps;\n\n    if (number !== nextNumber) {\n      this.updateType(nextNumber);\n    }\n\n    if (acceptedCards.toString() !== nextAcceptedCards.toString()) {\n      this.setCards(nextProps);\n    }\n  }\n\n  get issuer() {\n    const { type } = this.state;\n    const { issuer, preview } = this.props;\n\n    return preview && issuer ? issuer.toLowerCase() : type.issuer;\n  }\n\n  get number() {\n    const { type } = this.state;\n    const { number, preview } = this.props;\n\n    let maxLength = preview ? 19 : type.maxLength;\n    let nextNumber = typeof number === 'number' ? number.toString() : number.replace(/[A-Za-z]| /g, '');\n\n    if (isNaN(parseInt(nextNumber, 10)) && !preview) {\n      nextNumber = '';\n    }\n\n    if (maxLength > 16) {\n      maxLength = nextNumber.length <= 16 ? 16 : maxLength;\n    }\n\n    if (nextNumber.length > maxLength) {\n      nextNumber = nextNumber.slice(0, maxLength);\n    }\n\n    while (nextNumber.length < maxLength) {\n      nextNumber += '•';\n    }\n\n    if (['amex', 'dinersclub'].includes(this.issuer)) {\n      const format = [0, 4, 10];\n      const limit = [4, 6, 5];\n      nextNumber = `${nextNumber.substr(format[0], limit[0])} ${nextNumber.substr(format[1], limit[1])} ${nextNumber.substr(format[2], limit[2])}`;\n    }\n    else if (nextNumber.length > 16) {\n      const format = [0, 4, 8, 12];\n      const limit = [4, 7];\n      nextNumber = `${nextNumber.substr(format[0], limit[0])} ${nextNumber.substr(format[1], limit[0])} ${nextNumber.substr(format[2], limit[0])} ${nextNumber.substr(format[3], limit[1])}`;\n    }\n    else {\n      for (let i = 1; i < (maxLength / 4); i++) {\n        const space_index = (i * 4) + (i - 1);\n        nextNumber = `${nextNumber.slice(0, space_index)} ${nextNumber.slice(space_index)}`;\n      }\n    }\n\n    return nextNumber;\n  }\n\n  get expiry() {\n    const { expiry = '' } = this.props;\n    const date = typeof expiry === 'number' ? expiry.toString() : expiry;\n    let month = '';\n    let year = '';\n\n    if (date.includes('/')) {\n      [month, year] = date.split('/');\n    }\n    else if (date.length) {\n      month = date.substr(0, 2);\n      year = date.substr(2, 6);\n    }\n\n    while (month.length < 2) {\n      month += '•';\n    }\n\n    if (year.length > 2) {\n      year = year.substr(2, 4);\n    }\n\n    while (year.length < 2) {\n      year += '•';\n    }\n\n    return `${month}/${year}`;\n  }\n\n  setCards(props = this.props) {\n    const { acceptedCards } = props;\n    let newCardArray = [];\n\n    if (acceptedCards.length) {\n      Payment.getCardArray()\n        .forEach(d => {\n          if (acceptedCards.includes(d.type)) {\n            newCardArray.push(d);\n          }\n        });\n    }\n    else {\n      newCardArray = newCardArray.concat(Payment.getCardArray());\n    }\n\n    Payment.setCardArray(newCardArray);\n  }\n\n  updateType(number) {\n    const { callback } = this.props;\n    const type = Payment.fns.cardType(number) || 'unknown';\n\n    let maxLength = 16;\n\n    if (type === 'amex') {\n      maxLength = 15;\n    }\n    else if (type === 'dinersclub') {\n      maxLength = 14;\n    }\n    else if (['hipercard', 'mastercard', 'visa'].includes(type)) {\n      maxLength = 19;\n    }\n\n    const typeState = {\n      issuer: type,\n      maxLength,\n    };\n    const isValid = Payment.fns.validateCardNumber(number);\n\n    this.setState({\n      type: typeState,\n    });\n\n    /* istanbul ignore else */\n    if (typeof callback === 'function') {\n      callback(typeState, isValid);\n    }\n  }\n\n\n  render() {\n    return (\n         <div>\n         <form className=\"credit-card\">\n            <div className=\"form-header\">\n              <h4 className=\"title\">Credit card detail</h4>\n            </div>\n           \n            <div className=\"form-body\">\n              <input type=\"text\" className=\"card-number\" placeholder=\"Card Number\" />\n           \n              <div className=\"date-field\">\n                <div className=\"month\">\n                  <select name=\"Month\">\n                    <option value=\"january\">January</option>\n                    <option value=\"february\">February</option>\n                    <option value=\"march\">March</option>\n                    <option value=\"april\">April</option>\n                    <option value=\"may\">May</option>\n                    <option value=\"june\">June</option>\n                    <option value=\"july\">July</option>\n                    <option value=\"august\">August</option>\n                    <option value=\"september\">September</option>\n                    <option value=\"october\">October</option>\n                    <option value=\"november\">November</option>\n                    <option value=\"december\">December</option>\n                  </select>\n                </div>\n                <div className=\"year\">\n                  <select name=\"Year\">\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2023\">2023</option>\n                    <option value=\"2024\">2024</option>\n                  </select>\n                </div>\n /              </div>\n           \n              <div className=\"card-verification\">\n                <div className=\"cvv-input\">\n                  <input type=\"text\" placeholder=\"CVV\" />\n                </div>\n                <div className=\"cvv-details\">\n                 <input type=\"text\" placeholder=\"Name this card for future use\" />\n                </div>\n              </div>\n           \n              <button type=\"submit\" className=\"proceed-btn\"><a href=\"#\">SAVE THIS CARD</a></button>\n              <input type=\"reset\" className=\"paypal-btn\" value=\"CANCEL\" name=\"Cancel\" />\n              <p className=\"note\">Your card details would be securely saved for faster payments.Your CVV will not be stored.</p>\n         \n            </div>\n             </form>\n         </div>\n    );\n  }\n}\n\nexport default Newcard;\n"]},"metadata":{},"sourceType":"module"}